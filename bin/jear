#!/usr/bin/env node

process.env.DEBUG = 'jear'
var debug = require('debug')('jear')

var fs = require('fs')
var path = require('path')
var config = JSON.parse(fs.readFileSync(__dirname + '/../package.json'))
require('shelljs/global')

var program = require("commander")
var version = config.version

program.
  version(version).
  usage('[option] <file.vm>').
  option('-o, --output <filename>', 'out put filename').
  option('-p, --parseJSON', 'parse html, get json data')

program.on('--help', function(){
  console.log('  Examples:')
  console.log('')
  console.log('    $ jear xx.vm')
  console.log('    $ jear -p xx.html')
  console.log('    $ #pase xx.html to a.json')
  console.log('    $ jear -p -o a.json xx.html')
  console.log('')
  console.log('  jear@%s %s', version, __filename)
  console.log('')
})

program.parse(process.argv)

if (!program.args.length) {

  program.help()

} else {

  var cwd = process.cwd()
  var jsonify = require('../lib/index')

  if (program.parseJSON) {

    debug('start parse html to json')
    var parse = require('../lib/parse').parse
    var file = path.join(cwd, program.args[0])
    var json = parse(file)

    var output = program.output
    if (output) {
      debug('save file to %s', output)
      json.to(path.join(cwd, output))
      debug('save json file success')
    } else {
      console.log(json)
    }

    debug('get json success')

    return
  }

  debug('start')

  program.args.forEach(function(f){

    var file = path.join(cwd, f)
    var basename = path.basename(f)

    if (!fs.existsSync(file)) return;

    var str = fs.readFileSync(file).toString()

    var mockDir = path.dirname(file) + '/mock/'
    if (!test('-d', mockDir)) {
      mkdir(mockDir)
      debug('create mock dir')
    }

    var json = new jsonify(str).toJson()

    debug('get json from file ' + basename)
    json.to(mockDir + basename)
    debug('success save mock file to mock/' + basename)

  })

}

/**
 * vim: ft=javascript:tw=80:
 */
